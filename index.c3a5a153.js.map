{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,C,S,E,C,E,O,A,S,C,E,G,M,O,C,G,O,E,E,E,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,G,CCEA,IAAM,EAAQ,SAAS,aAAa,CAAC,eAE/B,EAAY,SAAS,aAAa,CAAC,eACnC,EAAY,SAAS,aAAa,CAAC,eACnC,EAAe,SAAS,aAAa,CAAC,kBACtC,EAAe,SAAS,aAAa,CAAC,kBAKtC,EAAY,SAAC,CAAA,CAAI,CAAvB,EAAkC,OAAA,EAAG,QAAQ,CAAG,C,EAEhD,EAAU,gBAAgB,CAAC,QAAS,SAAC,CAArC,EACE,IAAM,EAAQ,EAAG,EAAM,gBAAgB,CAAC,OAExC,EAAK,IAAI,CAAC,CAAI,CAAC,EAAE,CAAC,SAAS,CAAC,CAAA,IAC5B,EAAK,OAAO,CAAC,SAAC,CAAd,EAAsB,OAAA,EAAM,WAAW,CAAC,E,GAEpC,AAXM,KAWN,EAAI,EAAM,gBAAgB,CAAC,OAAO,MAAM,CAC1C,EAAU,EAAE,MAAM,CAAE,CAAA,GAEpB,EAAU,EAAW,CAAA,EAEzB,GAEA,EAAU,gBAAgB,CAAC,QAAS,SAAC,CAArC,EACE,EAAM,WAAW,CAAC,EAAM,gBAAgB,EAEpC,EAAM,gBAAgB,CAAC,MAAM,MAAM,EApB7B,EAqBR,EAAU,EAAE,MAAM,CAAE,CAAA,GAEpB,EAAU,EAAW,CAAA,EAEzB,GAEA,EAAa,gBAAgB,CAAC,QAAS,SAAC,CAAxC,EAGE,AAFc,EAAG,EAAM,gBAAgB,CAAC,OAEnC,OAAO,CAAC,SAAC,CAAd,EACE,IAAM,EAAO,SAAS,aAAa,CAAC,MAEpC,EAAI,WAAW,CAAC,EAClB,GAEI,AArCM,KAqCN,EAAM,gBAAgB,CAAC,KAAK,CAAC,EAAE,CAAC,QAAQ,CAAC,MAAM,CACjD,EAAU,EAAE,MAAM,CAAE,CAAA,GAEpB,EAAU,EAAc,CAAA,EAE5B,GAEA,EAAa,gBAAgB,CAAC,QAAS,SAAC,CAAxC,EAGE,AAFc,EAAG,EAAM,gBAAgB,CAAC,OAEnC,OAAO,CAAC,SAAC,CAAd,EACE,EAAI,WAAW,CAAC,EAAI,gBAAgB,CACtC,GAEI,EAAM,gBAAgB,CAAC,KAAK,CAAC,EAAE,CAAC,QAAQ,CAAC,MAAM,EAlDzC,EAmDR,EAAU,EAAE,MAAM,CAAE,CAAA,GAEpB,EAAU,EAAc,CAAA,EAE5B","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar tbody = document.querySelector(\"table tbody\");\nvar appendRow = document.querySelector(\".append-row\");\nvar removeRow = document.querySelector(\".remove-row\");\nvar appendColumn = document.querySelector(\".append-column\");\nvar removeColumn = document.querySelector(\".remove-column\");\nvar max = 10;\nvar min = 2;\nvar setButton = function(el, state) {\n    return el.disabled = state;\n};\nappendRow.addEventListener(\"click\", function(e) {\n    var rows = _to_consumable_array(tbody.querySelectorAll(\"tr\"));\n    rows.push(rows[1].cloneNode(true));\n    rows.forEach(function(row) {\n        return tbody.appendChild(row);\n    });\n    if (_to_consumable_array(tbody.querySelectorAll(\"tr\")).length === max) setButton(e.target, true);\n    else setButton(removeRow, false);\n});\nremoveRow.addEventListener(\"click\", function(e) {\n    tbody.removeChild(tbody.lastElementChild);\n    if (tbody.querySelectorAll(\"tr\").length <= min) setButton(e.target, true);\n    else setButton(appendRow, false);\n});\nappendColumn.addEventListener(\"click\", function(e) {\n    var rows = _to_consumable_array(tbody.querySelectorAll(\"tr\"));\n    rows.forEach(function(row) {\n        var cell = document.createElement(\"td\");\n        row.appendChild(cell);\n    });\n    if (tbody.querySelectorAll(\"tr\")[0].children.length === max) setButton(e.target, true);\n    else setButton(removeColumn, false);\n});\nremoveColumn.addEventListener(\"click\", function(e) {\n    var rows = _to_consumable_array(tbody.querySelectorAll(\"tr\"));\n    rows.forEach(function(row) {\n        row.removeChild(row.lastElementChild);\n    });\n    if (tbody.querySelectorAll(\"tr\")[0].children.length <= min) setButton(e.target, true);\n    else setButton(appendColumn, false);\n});\n\n//# sourceMappingURL=index.c3a5a153.js.map\n","'use strict';\n\nconst tbody = document.querySelector('table tbody');\n\nconst appendRow = document.querySelector('.append-row');\nconst removeRow = document.querySelector('.remove-row');\nconst appendColumn = document.querySelector('.append-column');\nconst removeColumn = document.querySelector('.remove-column');\n\nconst max = 10;\nconst min = 2;\n\nconst setButton = (el, state) => (el.disabled = state);\n\nappendRow.addEventListener('click', (e) => {\n  const rows = [...tbody.querySelectorAll('tr')];\n\n  rows.push(rows[1].cloneNode(true));\n  rows.forEach((row) => tbody.appendChild(row));\n\n  if ([...tbody.querySelectorAll('tr')].length === max) {\n    setButton(e.target, true);\n  } else {\n    setButton(removeRow, false);\n  }\n});\n\nremoveRow.addEventListener('click', (e) => {\n  tbody.removeChild(tbody.lastElementChild);\n\n  if (tbody.querySelectorAll('tr').length <= min) {\n    setButton(e.target, true);\n  } else {\n    setButton(appendRow, false);\n  }\n});\n\nappendColumn.addEventListener('click', (e) => {\n  const rows = [...tbody.querySelectorAll('tr')];\n\n  rows.forEach((row) => {\n    const cell = document.createElement('td');\n\n    row.appendChild(cell);\n  });\n\n  if (tbody.querySelectorAll('tr')[0].children.length === max) {\n    setButton(e.target, true);\n  } else {\n    setButton(removeColumn, false);\n  }\n});\n\nremoveColumn.addEventListener('click', (e) => {\n  const rows = [...tbody.querySelectorAll('tr')];\n\n  rows.forEach((row) => {\n    row.removeChild(row.lastElementChild);\n  });\n\n  if (tbody.querySelectorAll('tr')[0].children.length <= min) {\n    setButton(e.target, true);\n  } else {\n    setButton(appendColumn, false);\n  }\n});\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","_to_consumable_array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","tbody","document","querySelector","appendRow","removeRow","appendColumn","removeColumn","setButton","el","state","disabled","addEventListener","e","rows","querySelectorAll","push","cloneNode","forEach","row","appendChild","target","removeChild","lastElementChild","cell","createElement","children"],"version":3,"file":"index.c3a5a153.js.map"}